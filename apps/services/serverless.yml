service: hydration
provider:
  name: aws
  deploymentMethod: direct
  runtime: nodejs18.x
  stage: prod
  region: us-east-1
  environment:
    CHUNKS_BUCKET: ${self:custom.environment.${opt:stage, self:provider.stage}.HYDRATION_CHUNKS_BUCKET}
    HYDRATION_TABLE: ${self:custom.environment.${opt:stage, self:provider.stage}.HYDRATION_TABLE}
    QUEUE_URL: !GetAtt
      - HydrationQueue
      - QueueUrl
    REGION: ${self:provider.region}
    SERVICE: ${self:service}
    STAGE: ${opt:stage, self:provider.stage}
    STATE_MACHINE_ARN: !Join
      - ':'
      - - 'arn:aws:states'
        - !Ref AWS::Region
        - !Ref AWS::AccountId
        - 'stateMachine'
        - ${self:custom.environment.${opt:stage, self:provider.stage}.HYDRATION_STATE_MACHINE}
  # lambdaHashingVersion: 20201221    # what's this ---------->
  deploymentBucket:
    name: ${self:custom.environment.${opt:stage, self:provider.stage}.DEPLOYMENT_BUCKET}
  vpc:
    securityGroupIds:
      - ${self:custom.environment.${opt:stage, self:provider.stage}.SECURITY_GROUP_ID}
    subnetIds:
      - ${self:custom.environment.${opt:stage, self:provider.stage}.SUBNET_ID_1}
      - ${self:custom.environment.${opt:stage, self:provider.stage}.SUBNET_ID_2}
      - ${self:custom.environment.${opt:stage, self:provider.stage}.SUBNET_ID_3}
      - ${self:custom.environment.${opt:stage, self:provider.stage}.SUBNET_ID_4}
resources:
  Resources: ${file(./resources.yml)}
package:
  individually: true # more controls over functions to be packaged independently and can configure the same patterns or artifact config options to the functions similar to service wide
  patterns:
    - '!node_modules/**'
  excludeDevDependencies: true # default: true
custom:
  environment: ${file(./environments.yml)}
  serverless-offline:
    httpPort: 4000
  webpack:
    webpackConfig: 'webpack.config.js' # default
    includeModules: false # Node modules configuration for packaging (deault: false)
    packager: 'npm' # Packager used to package your external modules (deault: 'npm')
    packExternalModulesMaxBuffer: 204800
functions:
  generate-signedurl:
    handler: src/functions/signed-url/signed-url.handler
    description: Lambda function that generates the signed url for accessing s3 objects.
    events:
      - httpApi:
          path: /getSignedUrl
          method: post
    role: SignedUrlRole
    timeout: 30
  file-chunker:
    handler: src/functions/file-chunker/file-chunker.handler
    description: Lambda function description
    events:
      - s3:
          bucket: ${self:custom.environment.${opt:stage, self:provider.stage}.HYDRATION_MAIN_BUCKET}
          event: s3:ObjectCreated:*
          existing: true
          # rules:
          #   - prefix: uploads/
          #   - suffix: .jpg
    role: FileChunkerRole
    timeout: 60
  chunk-loader:
    handler: src/functions/chunk-loader/chunk-loader.handler
    description: Lambda function which loads data from chunks to sqs queue
    role: ChunkLoaderRole
    timeout: 300
  chunk-processor:
    handler: src/functions/chunk-processor/chunk-processor.handler
    description: Lambda function which processes batch of messages from sqs queue
    events:
      - sqs:
          arn: !GetAtt
            - HydrationQueue
            - Arn
          batchSize: 20
          maximumBatchingWindow: 30
          maximumConcurrency: 20
          functionResponseType: ReportBatchItemFailures
    role: ChunkProcessorRole
    timeout: 60
stepFunctions:
  stateMachines: ${file(./stateMachines.yml)}
plugins:
  - serverless-step-functions
  - serverless-auto-swagger
  - serverless-webpack
  - serverless-offline
